{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/store/MovieContext.tsx","components/FindMovie/FindMovie.tsx","api.ts","components/MoviesList/MoviesList.tsx","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MovieContext","React","createContext","movies","handleNewFilm","MoviesProvider","children","useState","setMovies","Provider","value","newFilm","prevMovies","FindMovie","query","setQuery","setMovie","isLoading","setIsLoading","error","setError","useContext","onSubmit","event","preventDefault","fetch","then","res","json","catch","Response","Error","getMovie","response","movieData","Title","Plot","Poster","imdbID","imdbId","e","finally","htmlFor","type","id","placeholder","cn","onChange","target","disabled","Boolean","onClick","newMovie","find","item","MoviesList","map","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.87e25a3e.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\nimport { Movie } from '../../types/Movie';\n\ninterface Props {\n  movie: Movie\n}\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => {\n  return (\n    <div className=\"card\" data-cy=\"movieCard\">\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            data-cy=\"moviePoster\"\n            src={movie?.imgUrl}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\" data-cy=\"movieTitle\">{movie?.title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\" data-cy=\"movieDescription\">\n          {movie?.description}\n          <br />\n          <a href={movie?.imdbUrl} data-cy=\"movieURL\">\n            IMDB\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport { Movie } from '../../types/Movie';\n\ninterface Context {\n  movies: Movie[],\n  handleNewFilm: (newFilm: Movie) => void,\n}\n\nexport const MovieContext = React.createContext<Context>({\n  movies: [],\n  handleNewFilm: () => {},\n});\n\ninterface Props {\n  children: React.ReactNode;\n}\n\nexport const MoviesProvider: React.FC<Props> = ({ children }) => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const handleNewFilm = (newFilm: Movie) => {\n    setMovies((prevMovies) => [...prevMovies, newFilm]);\n  };\n\n  return (\n    <MovieContext.Provider\n      value={{\n        movies,\n        handleNewFilm,\n      }}\n    >\n      {children}\n    </MovieContext.Provider>\n  );\n};\n","import React, { useContext, useState } from 'react';\nimport cn from 'classnames';\nimport './FindMovie.scss';\nimport { MovieCard } from '../MovieCard';\nimport { getMovie } from '../../api';\nimport { Movie } from '../../types/Movie';\nimport { MovieData } from '../../types/MovieData';\nimport { MovieContext } from '../store/MovieContext';\n\nfunction convertMovieDataToMovie(movieData: MovieData): Movie {\n  // eslint-disable-next-line max-len\n  const defaultImageUrl = 'https://via.placeholder.com/360x270.png?text=no%20preview';\n\n  return {\n    title: movieData.Title,\n    description: movieData.Plot,\n    imgUrl: movieData.Poster === 'N/A' ? defaultImageUrl : movieData.Poster,\n    imdbUrl: `https://www.imdb.com/title/${movieData.imdbID}`,\n    imdbId: movieData.imdbID,\n  };\n}\n\nexport const FindMovie: React.FC = () => {\n  const [query, setQuery] = useState('');\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(false);\n\n  const { movies, handleNewFilm } = useContext(MovieContext);\n\n  const handleAddMovie = (newMovie: Movie) => {\n    if (movies.find(item => item.imdbId === newMovie.imdbId)) {\n      setMovie(null);\n    } else {\n      handleNewFilm(newMovie);\n      setMovie(null);\n    }\n  };\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    setIsLoading(true);\n\n    getMovie(query)\n      .then((response) => {\n        if (response.Response === 'False') {\n          setMovie(null);\n          setError(true);\n        } else {\n          setMovie(convertMovieDataToMovie(response));\n          setError(false);\n        }\n      })\n      .catch((e) => {\n        throw new Error(e);\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  };\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={cn('input', {\n                'is-danger': error,\n              })}\n              value={query}\n              onChange={(event) => {\n                setQuery(event.target.value);\n                setError(false);\n              }}\n            />\n          </div>\n\n          {error && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={cn('button', {\n                'is-light': !isLoading,\n                'is-loading': isLoading,\n              })}\n              disabled={Boolean(!query)}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          {movie && (\n            <div className=\"control\">\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={() => {\n                  handleAddMovie(movie);\n                  setQuery('');\n                  setError(false);\n                }}\n              >\n                Add to the list\n              </button>\n            </div>\n          )}\n        </div>\n      </form>\n\n      {movie && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={movie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=5c0e55f8';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import React, { useContext } from 'react';\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { MovieContext } from '../store/MovieContext';\n\nexport const MoviesList: React.FC = () => {\n  const { movies } = useContext(MovieContext);\n\n  return (\n    <div className=\"movies\">\n      {movies.map(movie => (\n        <MovieCard\n          key={movie.imdbId}\n          movie={movie}\n        />\n      ))}\n    </div>\n  );\n};\n","import './App.scss';\n\nimport { FindMovie } from './components/FindMovie';\nimport { MoviesList } from './components/MoviesList';\nimport { MoviesProvider } from './components/store/MovieContext';\n\nexport const App = () => {\n  return (\n    <div className=\"page\">\n      <MoviesProvider>\n        <div className=\"page-content\">\n          <MoviesList />\n        </div>\n\n        <div className=\"sidebar\">\n          <FindMovie />\n        </div>\n      </MoviesProvider>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}